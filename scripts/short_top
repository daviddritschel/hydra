#!/usr/bin/env python
import sys,re,datetime
import subprocess as sbpc

def get_machine():
  hn=sbpc.Popen(['hostname'],stdout=sbpc.PIPE)
  return hn.communicate()[0].rstrip()

def get_df():
  df=sbpc.Popen(['df','-h'],stdout=sbpc.PIPE)
  df_lines=df.communicate()[0].split('\n')
  df_output=[]
  df_output.append(df_lines[0])
  for line in df_lines[1:]:
    if line.endswith('/local_raid') or re.search('scratch\d?',line):
      df_output.append(line)  
  return df_output

def get_top():
  tp=sbpc.Popen(['top','-b','-n 1'],stdout=sbpc.PIPE)
  top_lines=tp.communicate()[0].split('\n')
  header=[]
  header.append('top @ %s' %datetime.datetime.now())
  header.append(top_lines[6])
  raw_footer=top_lines[7:]
  footer=[]
  for i,line in enumerate(raw_footer):
    if float(line.split()[8]) > 0.0 and not line.split()[11]=='top':
      footer.append(line)
    elif i==0 :
      footer.append('---------------------')
      footer.append('No large jobs found')
      break
    else:
      footer.append('No further large jobs')
      break
  return header,footer

def get_procs():
  # Open input files:
  try:
    statfile=open('/proc/stat','r')
    proc_stat=statfile.readlines()
    statfile.close()
  except IOError, message:# error if file not found 
    print >> sys.stderr, 'File could not be opened', message
    sys.exit()
  cpu_checkstr=re.compile('cpu\d')
  procs=0
  for line in proc_stat:  
    if re.findall(cpu_checkstr,line):
      procs+=1
  if procs == 8:
    procs=procs/2
  if procs == 12:
    procs=procs/2
  return procs

if __name__ == '__main__':
  machine = get_machine()
  procs = get_procs()
  top_header,top_footer = get_top()
  discs = get_df()
  print ''
  print 'Machine is %s, and has %i processors.' %(machine,procs)
  print ''
  for line in top_header:
    print line
  for line in top_footer:
    print line
  print ''
  print 'Disc usage:'
  for line in discs:
    print line  
  print '------------------'
  
