#!/bin/csh

#========================================================================
# Generates a colour movie in a chosen format from a selected character
# image file (ending in .c2) generated e.g. by r4toc2.f90

#   ===> Run this in the working directory containing the image <===
#========================================================================

# Specify the FORTRAN compiler together with compiler options:
alias f90 "gfortran -O3 -mcmodel=medium"

# Default number of bytes representing a single character:
set n_b_p_c="1"

# Look for c2 files in current working directory
set c2files=`/bin/ls *.c2`
set nf=$#c2files
# Choose one prefix as the default:
set infile_prefix = `echo $c2files[$nf] | awk -F. '{print $(NF-1)}'`

# Default input parameters to c2toppm.f90:
set nx     = "256"   # Horizontal image dimension
set ny     = "256"   # Vertical   image dimension
set irec1  = "1"     # First frame in the movie
set format = "mp4"   # Set default output movie format
#========================================================================
# Get home directory from a script:
set local_home=${HOME}
# Location of the hydra script directory:
set bindir=$local_home/hydra/scripts

echo
echo '          --------------------------------------------'
echo '          |  Character map -> movie conversion tool  |'
echo '          --------------------------------------------'
echo

echo -n ' Prefix (before .c2) of the character map file (default:' $infile_prefix')? '
set var=$<
if ($var != "") set infile_prefix=$var

# Check that file exists:
if (!(-e $infile_prefix.c2)) then
   echo ' *** File does not exist!!!  Exiting.'
   exit(-1)
endif

echo
echo -n ' Horizontal dimension of file (default:' $nx')? '
set var=$<
if ($var != "") set nx=$var

echo -n '   Vertical dimension of file (default:' $ny')? '
set var=$<
if ($var != "") set ny=$var

set temlist = (`/bin/ls -l $infile_prefix.c2`)
set file_size = $temlist[5]
@ data_size = $ny * $nx * 2
@ irec2   = $file_size / $data_size

echo -n ' Beginning frame to image (default:' $irec1')? '
set var=$<
if ($var != "") set irec1=$var

echo -n ' End frame to image (default:' $irec2')? '
set var=$<
if ($var != "") set irec2=$var

echo -n ' Output movie format (default:' $format')? '
set var=$<
if ($var != "") set format=$var


#========================================================================
# Use C pre-processor to put chosen parameters $copts into c2toppm.f90:
set copts="-DN_X=$nx -DN_Y=$ny -DN_BYTES_PER_CHAR=$n_b_p_c"
/bin/cp $bindir/graphics/c2toppm.f90 .
precomp $copts c2toppm.f90

# Compile programme:
f90 -o c2toppm c2toppm.f90

# Copy colourmap (made by genmap.f90) to working directory:
/bin/cp $bindir/graphics/colourmap .


set irec = $irec1

while ($irec <= $irec2)

# Create input data file:
cat << /EOF > input_c2toppm
$infile_prefix
$irec
/EOF

# Run programme (creates a PPM file):
c2toppm < input_c2toppm > junk

# Extract ppm filename:
set ppmfile = `cat ppmfilename`

# Get prefix of filename:
set basename = `echo $ppmfile | awk -F. '{print $(NF-1)}'`

convert $basename.ppm $basename.png

#Clean up temporary image files:
/bin/rm $ppmfile ppmfilename input_c2toppm junk
mv $basename.png tmp_$basename.png
@ irec++
end

ffmpeg -sameq -r 4 -i tmp_{$infile_prefix}_%04d.png $infile_prefix.$format 
echo
echo ' Created' $infile_prefix.$format

# Clean up unwanted files:
/bin/rm c2toppm* tmp_*
